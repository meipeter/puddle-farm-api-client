/*
 * puddle.farm API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct TopDefeated {
    /// Timestamp when this opponent was defeated
    #[serde(rename = "timestamp", skip_serializing_if = "Option::is_none")]
    pub timestamp: Option<String>,
    /// ID of the defeated opponent
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i64>,
    /// Name of the defeated opponent
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// Character used by the defeated opponent
    #[serde(rename = "char_short", skip_serializing_if = "Option::is_none")]
    pub char_short: Option<String>,
    /// Rating of the defeated opponent at the time
    #[serde(rename = "value", skip_serializing_if = "Option::is_none")]
    pub value: Option<f32>,
    /// Rating deviation of the defeated opponent
    #[serde(rename = "deviation", skip_serializing_if = "Option::is_none")]
    pub deviation: Option<f32>,
}

impl TopDefeated {
    pub fn new() -> TopDefeated {
        TopDefeated {
            timestamp: None,
            id: None,
            name: None,
            char_short: None,
            value: None,
            deviation: None,
        }
    }
}

