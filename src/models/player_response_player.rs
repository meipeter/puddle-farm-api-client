/*
 * puddle.farm API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct PlayerResponsePlayer {
    /// Player's rating for the character
    #[serde(rename = "rating", skip_serializing_if = "Option::is_none")]
    pub rating: Option<f32>,
    /// Player's rating deviation for the character
    #[serde(rename = "deviation", skip_serializing_if = "Option::is_none")]
    pub deviation: Option<f32>,
    /// Short name of the character (e.g., \"SO\" for Sol)
    #[serde(rename = "char_short", skip_serializing_if = "Option::is_none")]
    pub char_short: Option<String>,
    /// Full name of the character
    #[serde(rename = "character", skip_serializing_if = "Option::is_none")]
    pub character: Option<String>,
    /// Number of matches played with the character
    #[serde(rename = "match_count", skip_serializing_if = "Option::is_none")]
    pub match_count: Option<i32>,
    /// Player's top rank for the character
    #[serde(rename = "top_char", skip_serializing_if = "Option::is_none")]
    pub top_char: Option<i32>,
}

impl PlayerResponsePlayer {
    pub fn new() -> PlayerResponsePlayer {
        PlayerResponsePlayer {
            rating: None,
            deviation: None,
            char_short: None,
            character: None,
            match_count: None,
            top_char: None,
        }
    }
}

